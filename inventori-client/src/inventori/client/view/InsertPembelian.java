/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package inventori.client.view;

import com.stripbandunk.jwidget.model.DynamicTableModel;
import dao.BarangDao;
import dao.PembelianDao;
import entity.Pembelian;
import entity.PembelianDetail;
import inventori.client.TablelModel.TabelModelPembelian;
import inventori.client.dialog.Pencarian;
import inventori.client.dialog.TampilReport;
import inventori.client.laporan.path.Direktori;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.swing.JRViewer;

/**
 *
 * @author ayu
 */
public class InsertPembelian extends javax.swing.JInternalFrame {

    private PembelianDao pembelianDao;
    private BarangDao barangDao;
    private TabelModelPembelian tabelModel;
    private Pembelian pembelian;
    
    
    public InsertPembelian(PembelianDao pembelianDao,
            BarangDao barangDao) {
        this.pembelianDao=pembelianDao;
        this.barangDao=barangDao;
        initComponents();
        tabelModel=new TabelModelPembelian(PembelianDetail.class);
        tabelInput.setDynamicModel(tabelModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtPembelian = new javax.swing.JTextField();
        bCariPembelian = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelInput = new com.stripbandunk.jwidget.JDynamicTable();
        jPanel2 = new javax.swing.JPanel();
        bSimpan = new javax.swing.JButton();
        bReset = new javax.swing.JButton();
        bPrint = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Input Barang Masuk");

        jLabel1.setText("Pembelian :");

        bCariPembelian.setText("Cari");
        bCariPembelian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCariPembelianActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(tabelInput);

        bSimpan.setText("Save");
        bSimpan.setEnabled(false);
        bSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSimpanActionPerformed(evt);
            }
        });
        jPanel2.add(bSimpan);

        bReset.setText("Reset");
        bReset.setEnabled(false);
        bReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bResetActionPerformed(evt);
            }
        });
        jPanel2.add(bReset);

        bPrint.setText("Print");
        bPrint.setEnabled(false);
        bPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPrintActionPerformed(evt);
            }
        });
        jPanel2.add(bPrint);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 605, Short.MAX_VALUE)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(txtPembelian, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 174, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(bCariPembelian)
                        .add(0, 315, Short.MAX_VALUE))
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(32, 32, 32)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(txtPembelian, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(bCariPembelian))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                .add(18, 18, 18)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(33, 33, 33))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bCariPembelianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCariPembelianActionPerformed
        try {
            // TODO add your handling code here:
                // TODO add your handling code here:
                List<Pembelian> pembel = pembelianDao.getPembelian();
                if(!pembel.isEmpty()){
                    DynamicTableModel tableMod=new DynamicTableModel(pembel, Pembelian.class);
                    Pencarian pencarian=new Pencarian();
                    pencarian.setTitle("Pencarian Pembelian");
                    pencarian.setTableModel(tableMod);
                    pencarian.loadPencarian();
                    String ambilData = pencarian.ambilData();
                    if(ambilData!=null){
                        pembelian=pembelianDao.getpPembelian(ambilData);
                        txtPembelian.setText(pembelian.getNo_beli());
                        tabelModel=new TabelModelPembelian(pembelian.getDetailPembelian(), PembelianDetail.class);
                        tabelInput.setDynamicModel(tabelModel);
                        //for(PembelianDetail pd: pembelianDetil){
                           // tabelModel.add(pd);
                        //}   
                        bSimpan.setEnabled(true);
                        bReset.setEnabled(true);
                    }
                }else{
                    JOptionPane.showMessageDialog(rootPane, "Data Masih Kosong !");
                }
        } catch (RemoteException ex) {
            Logger.getLogger(InsertPembelian.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_bCariPembelianActionPerformed

    private void bSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSimpanActionPerformed
        // TODO add your handling code here:
        boolean input=false;
        List list=new ArrayList();
        for(int i=0;i<tabelInput.getRowCount();i++){
            try {
                PembelianDetail pd=tabelModel.get(tabelInput.convertRowIndexToModel(i));
                list.add(pd);
                boolean tambahJumlahStok = barangDao.tambahJumlahStok(pd.getJumlah(), pd.getBarang());
                if(tambahJumlahStok){
                    input=true;
                }
            } catch (RemoteException ex) {
                Logger.getLogger(InsertPembelian.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if(input){
            JOptionPane.showMessageDialog(rootPane, "Data berhasil disimpan !");
            pembelian.setDetailPembelian(list);
            bPrint.setEnabled(true);
            bSimpan.setEnabled(false);
            bCariPembelian.setEnabled(false);
        }else{
            JOptionPane.showMessageDialog(rootPane, "Data gagal disimpan !");
        }
    }//GEN-LAST:event_bSimpanActionPerformed

    private void bResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bResetActionPerformed
        // TODO add your handling code here:
        pembelian=null;
        txtPembelian.setText("");
        bPrint.setEnabled(false);
        bCariPembelian.setEnabled(true);
        bReset.setEnabled(false);
        bSimpan.setEnabled(false);
        tabelModel.clear();
    }//GEN-LAST:event_bResetActionPerformed

    private void bPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPrintActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            List list=new ArrayList();
            list.add(pembelian);
             HashMap map=new HashMap();
             map.put("detil", new Direktori().getPath("Barang_subreport"));
            JasperPrint jRprint=JasperFillManager.fillReport(getClass().getClassLoader().getResourceAsStream
                    ("inventori/client/laporan/LapInputBarang.jasper"),map, new JRBeanCollectionDataSource(list));
            JRViewer jv=new JRViewer(jRprint);
            TampilReport report=new TampilReport("Laporan Input Barang", jv);
        } catch (JRException ex) {
            Logger.getLogger(PenjualanView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bPrintActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCariPembelian;
    private javax.swing.JButton bPrint;
    private javax.swing.JButton bReset;
    private javax.swing.JButton bSimpan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private com.stripbandunk.jwidget.JDynamicTable tabelInput;
    private javax.swing.JTextField txtPembelian;
    // End of variables declaration//GEN-END:variables
}
